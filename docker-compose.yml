version: "3.8"
services:

  nodecli:
    container_name: nodecli
    build:
      context: ./
      args:
        UID: 1000
        GID: 1000
      dockerfile: ./docker/client/dockerfile
    user: '1000'
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./client:/home/node/app/client
    command: pm2-runtime npm -- start


  nodeserv:
    container_name: nodeserv
    build:
      context: ./
      args:
        UID: 1000
        GID: 1000
      dockerfile: ./docker/server/dockerfile
    user: '1000'
    restart: always
    ports:
      - "4000:4000"
    networks:
      - app-network
    volumes:       
      - ./server:/home/node/app/server
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_PORT=27017
    command: npm start

  mongo:
    container_name: mongo
    image: mongo:4.4.4
    restart: always
    volumes:
      - db:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - app-network

volumes:
  db:

#Docker Networks
networks:
  app-network:
    driver: bridge



